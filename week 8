import java.util.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
public class Driver {

    public static void main(String[] args) {

        List<Student> students = new ArrayList<Student>();

        students.add(new Student(1, "JJ. Jognson", 38));
        students.add(new Student(2, "P. Tibbs", 48));
        students.add(new Student(3, "W. Major", 28));
        students.add(new Student(4, "P. Turner", 60));
        students.add(new Student(5, "A. Ball", 20));
        students.add(new Student(6, "B. Smithy", 90));
        students.add(new Student(7, "R. Jules", 71));
        students.add(new Student(8, "T. Verne", 97));


        // create your Stream solutions here
   /**students.stream().forEach(student -> System.out.println(student.toString()));

    students.stream().filter(student -> student.getGrade() > 70).toList().forEach(System.out::println);


   students.stream().map(Student::getName).map(String::toUpperCase).sorted().forEach(System.out::println);


   double avegrade = students.stream().mapToDouble(Student::getGrade).average().getAsDouble();
   System.out.println(avegrade);


   IntStream.range(90,101).map(e -> e*e*e).forEach(System.out::println);



        Stream.generate(Math::random).map(n -> (int)(n * 5 + 1)).limit(10).distinct().forEach(System.out::println);

    */

       
    }
}

public class Student {

    /**
     * The student ID
     */
    private int id;

    /**
     * The student's name
     */
    private String name;

    /**
     * The students overall grade.
     */
    private float grade;

    /**
     * @return the student ID
     */
    public int getID() {

        return id;
    }

    /**
     * @return the student's name
     */
    public String getName() {

        return name;
    }

    /**
     * @return the students overall grade.
     */
    public float getGrade() {

        return grade;
    }

    public String toString() {

        return id + " Name : '" + name + "' Grade: " + grade;

    }

    /**
     * Constructor
     *
     * @param id
     * @param name
     * @param grade
     */
    public Student(int id, String name, float grade) {
        this.id = id;
        this.name = name;
        this.grade = grade;
    }
}
